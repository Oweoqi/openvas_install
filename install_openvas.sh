# SCRIPT GENERATED BY CHRISTIAN FERNANDEZ A MEMBER OF THE HISPAGATOS LABS



# arch linux: get install uuid https://aur.archlinux.org/packages/uuid
# arch linux: get install wmiclient https://aur.archlinux.org/packages/wmi-client/
# arch linux: install libpcap libssh libldap libksba  gpgme glib sqlite3 libxml2 libxslt  libmicrohttpd libxslt

# http://download.opensuse.org/repositories/security:/OpenVAS:/UNSTABLE:/v6/xUbuntu_13.04/amd64/

#    This script has a GPLv3 License
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#



DIRECTORY="openvas-dev"
VERSION="+beta1"
LIBRARIES="openvas-libraries-7.0"
SCANNER="openvas-scanner-4.0"
MANAGER="openvas-manager-5.0"
GREENBONE="greenbone-security-assistant-5.0"
CLI="openvas-cli-1.3"


if [ ! -d ~/${DIRECTORY} ]; then
  echo "Creating openvas-dev directory"
  mkdir openvas-dev
fi

cd ~/$DIRECTORY


echo "Installing needed packages"
sudo apt-get -y install sudo build-essential make cmake nsis pkg-config nmap libssh-dev libgnutls-dev  libglib2.0-dev libpcap-dev libgpgme11-dev uuid-dev bison libksba-dev rsync sqlite3 libsqlite3-dev wget curl alien fakeroot libmicrohttpd-dev libxml2-dev libxslt1-dev xsltproc


echo "exporting PGK_CONFIG_PATH"
export PKG_CONFIG_PATH=/opt/openvas/lib/pkgconfig





function get_build {
  echo "Downloading and building $1"

  cd ~/$DIRECTORY

  if [ ! -f "$1.tar.gz" ]; then
    wget --directory-prefix ~/$DIRECTORY http://wald.intevation.org/frs/download.php/1340/$1.tar.gz
  fi

  tar zxvf openvas-libraries-*

  cd openvas-libraries-*

  if [  -d "build" ]; then
    echo "removing build directory for $1"
    rm -rf  build
  fi

  mkdir build

  cd build
  cmake -DCMAKE_INSTALL_PREFIX=/opt/openvas ..
  make
  make doc
  sudo make install
  make rebuild_cache
  cd ~/$DIRECTORY

}

get_build $LIBRARIES$VERSION

get_build $SCANNER$VERSION

get_build $MANAGER$VERSION

get_build $GREENBONE$VERSION

get_build $CLI$VERSION


echo "Adding openvas to the enviroment PATH"
export PATH=/opt/openvas/bin:/opt/openvas/sbin:$PATH
sudo sh -c "echo 'export PATH=/opt/openvas/bin:/opt/openvas/sbin:$PATH' >> /etc/bash.bashrc" 

sudo sh -c "echo '/opt/openvas/lib' > /etc/ld.so.conf.d/openvas"
sudo sh -c "echo '/opt/openvas/lib' >> /etc/ld.so.conf"
sudo ldconfig

# TO DO LATER

#sudo chmod -R 777 /opt/openvas/var/log
#sudo chmod -R 777 /opt/openvar/var/run
#sudo chmod 644 /opt/openvas/var/lib/openvas/private/CA/serverkey.pem


#configure

echo "CONFIGURE"

echo "sudo openvas-mkcert"
sudo /opt/openvas/sbin/openvas-mkcert



#echo "sync GreenBone-NVT"
#sudo /opt/openvas/sbin/greenbone-nvt-sync

echo "Sync NVT"
sudo -b env  PATH="/opt/openvas/bin:/opt/openvas/sbin:$PATH" /opt/openvas/sbin/openvas-nvt-sync


sleep 10

echo "sudo openvas-mkcert-client -n -i"
sudo -b env  PATH="/opt/openvas/bin:/opt/openvas/sbin:$PATH" /opt/openvas/sbin/openvas-mkcert-client -n -i


echo "Starting the scanner"
sudo -b env  PATH="/opt/openvas/bin:/opt/openvas/sbin:$PATH" /opt/openvas/sbin/openvassd


sleep 10

echo "sudo openvasmd --rebuild"
sudo /opt/openvas/sbin/openvasmd --rebuild


sleep 10



echo "doing the ScapData Sync"
sudo -b env  PATH="/opt/openvas/bin:/opt/openvas/sbin:$PATH" /opt/openvas/sbin/openvas-scapdata-sync


sleep 10

echo "Doing the CertData sync"
sudo -b env  PATH="/opt/openvas/bin:/opt/openvas/sbin:$PATH" /opt/openvas/sbin/openvas-certdata-sync


sleep 10 


if [ !  -f "/opt/openvas/etc/openvas/pwpolicy.conf" ]; then
  echo "creating password policy file, read the doc and edit it as you need"
  sudo touch /opt/openvas/etc/openvas/pwpolicy.conf
fi


echo "Starting openvas manager"
sudo -b env  PATH="/opt/openvas/bin:/opt/openvas/sbin:$PATH" /opt/openvas/sbin/openvasmd



echo "Starting GreenBone security assistant"
sudo -b env  PATH="/opt/openvas/bin:/opt/openvas/sbin:$PATH" /opt/openvas/sbin/gsad


echo "Create config file"
sudo -b env  PATH="/opt/openvas/bin:/opt/openvas/sbin:$PATH" openvassd -s > /opt/openvas/etc/openvas/openvassd.conf


echo "Create your first user"
echo "openvasmd --first-user=myuser"


#sudo  mkdir /opt/openvas/tmp
#sudo  chmod 777 /opt/openvas/tmp

echo "if any issues download and run with the --v7 flag"
echo "wget --no-check-certificate https://svn.wald.intevation.org/svn/openvas/trunk/tools/openvas-check-setup"
